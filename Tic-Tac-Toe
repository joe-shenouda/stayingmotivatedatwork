#include <iostream>

using namespace std;

const int BOARD_SIZE = 3;

void initializeBoard(char board[][BOARD_SIZE]) {
    for (int i = 0; i < BOARD_SIZE; i++) {
        for (int j = 0; j < BOARD_SIZE; j++) {
            board[i][j] = ' ';
        }
    }
}

void printBoard(char board[][BOARD_SIZE]) {
    cout << "  0 1 2" << endl;
    for (int i = 0; i < BOARD_SIZE; i++) {
        cout << i << " ";
        for (int j = 0; j < BOARD_SIZE; j++) {
            cout << board[i][j] << "|";
        }
        cout << endl;
        cout << "  -+-+-" << endl;
    }
}

bool isBoardFull(char board[][BOARD_SIZE]) {
    for (int i = 0; i < BOARD_SIZE; i++) {
        for (int j = 0; j < BOARD_SIZE; j++) {
            if (board[i][j] == ' ') {
                return false;
            }
        }
    }
    return true;
}

bool isGameOver(char board[][BOARD_SIZE], char player) {
    // check rows
    for (int i = 0; i < BOARD_SIZE; i++) {
        if (board[i][0] == player && board[i][1] == player && board[i][2] == player) {
            return true;
        }
    }
    // check columns
    for (int j = 0; j < BOARD_SIZE; j++) {
        if (board[0][j] == player && board[1][j] == player && board[2][j] == player) {
            return true;
        }
    }
    // check diagonals
    if (board[0][0] == player && board[1][1] == player && board[2][2] == player) {
        return true;
    }
    if (board[0][2] == player && board[1][1] == player && board[2][0] == player) {
        return true;
    }
    return false;
}

int main() {
    char board[BOARD_SIZE][BOARD_SIZE];
    initializeBoard(board);

    cout << "Welcome to Tic-Tac-Toe!" << endl;
    cout << "Player 1: X" << endl;
    cout << "Player 2: O" << endl;

    int currentPlayer = 1;
    char playerSymbol = 'X';

    do {
        printBoard(board);

        int row, col;
        cout << "Player " << currentPlayer << ", enter row and column (e.g. 1 2): ";
        cin >> row >> col;

        // check if the cell is already occupied
        if (board[row][col] != ' ') {
            cout << "That cell is already occupied. Please try again." << endl;
            continue;
        }

        board[row][col] = playerSymbol;

        // check if the game is over
        if (isGameOver(board, playerSymbol)) {
            printBoard(board);
            cout << "Player " << currentPlayer << " wins!" << endl;
            return 0;
        } else if (isBoardFull(board)) {
            printBoard(board);
            cout << "The game is a tie." << endl;
            return 0;
        }

        // switch to the other player's turn
        if (currentPlayer == 1) {
            currentPlayer = 2;
            playerSymbol = 'O';
        } else {
            currentPlayer = 1;
            playerSymbol = 'X';
        }
    } while (true);

    return 0;
}

           
